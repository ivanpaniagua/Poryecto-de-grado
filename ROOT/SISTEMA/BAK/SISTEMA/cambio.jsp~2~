<%@ page import="business.*" %>
<%@ page errorPage="PaginaError.jsp" %>
<%@ page session="false" %>

<%-- Cualquier error producido en esta pagina es pasada a una pagina de error.
Se necesita la session en falso para que no crear un objeto "session"
dentro de la pagina, puesto que si existe algun error como de
session o id de session no valida (expira la session), no se genere una session valida
nuevamente, sin embargo aunque no se considerara esto y se creara una session
nueva en esta pagina no se tendria el valor (id.usuario) dentro la session --%>

<%
 response.setHeader("Cache-Control", "no-cache");
 response.setHeader("Pragma", "no-cache");
 response.setHeader("Expires", "-1");

 HttpSession session = request.getSession(false);
 if ((session == null)) {
   	throw new SecurityException("Session nula");
 }
 else if (! request.isRequestedSessionIdValid()) {
  	throw new SecurityException("Id de session ya no valida");
 }

 Integer id = (Integer)session.getAttribute("id.usuario");

 if (id==null) {
  	throw new SecurityException("Se tiene una session valida pero no un usuario valido ");
 }

 Bd bd = Bd.getBd();
 Usuario usuario = bd.getUsuario_id(id.intValue());
 if (usuario==null) {
  	throw new SecurityException("No existe el usuario de la session");
 }
 String password = null;
  //Almacena el password nuevo pasado en la solicitud
  String nuevo = null;
  //Almacena el password nuevo pasado en la solicitud
  String nuevo_rep = null;

 password = request.getParameter("password");
 nuevo = request.getParameter("nuevo");
 nuevo_rep = request.getParameter("nuevo_rep");

 //primeramente se comprueba que sean caracteres validos
 if (!Util.Valido(password) || !Util.Valido(nuevo) || !Util.Valido(nuevo_rep)) {
  throw new SecurityException("No se especificaron los datos o son datos invalidos");
 }

%>

<html>
<head>
<title> RESULTADO DEL CAMBIO </title>
</head>

<body bgcolor="#CCCCD6" text="#000000">
<center>
<img src="../../../imagenes/comunidad.jpg" width="764" height="65" alt="Fondo de la Comunidad">
<hr size="3">
<img src="../../../imagenes/cambio.jpg" width="482" height="30" alt="Cambio de Contraseña">
<br>
<br>
<%  usuario.cambiar(password,nuevo,nuevo_rep,request.getRemoteAddr());
    if(!usuario.Errores()) { %>
      <font face="Arial, Helvetica, sans-serif" size="4"><b>Se ha cambiado la contraseña de acceso al sistema</b></font>
<%  }
    else {  /*Cualquier error es eliminacion de la session*/ %>
    <font face="Arial, Helvetica, sans-serif" size="4" color="red"><b>Error al cambiar la contraseña :
    <br>
    <%= usuario.getErrores() %>
    </b></font>
<%}%>
<br>
<hr size="3">
  &nbsp;&nbsp;<a href="menu.jsp"><img src="../../../imagenes/inicio.jpg" width="38" height="37" alt="inicio" border="0"></a>
  &nbsp;&nbsp;<a href="listar.jsp"><img src="../../../imagenes/lista.jpg" width="38" height="37" alt="lista de cuentas financieras" border="0"></a>
  &nbsp;<a href="pag_cambio.html"><img src="../../../imagenes/contrasena.jpg" width="86" height="37" alt="contrasena" border="0"></a>
  &nbsp;<a href="/servlet/control"><img src="../../../imagenes/contacto.jpg" width="61" height="37" alt="contacto" border="0"></a>
  &nbsp;&nbsp;<a href="/servlet/salir"><img src="../../../imagenes/salir.jpg" border="0" alt="salir"></a><br>
<hr size="3">

</center>
</body>
</html>

<%--
package sistema;

import javax.servlet.*;
import javax.servlet.http.*;
import java.io.*;
import java.util.*;
import business.*;

public class cambio extends HttpServlet {

  private Bd bd;
  /**Inicializar variables globales*/
  public void init(ServletConfig config) throws ServletException {
    super.init(config);
  }

  /**
    * Procesar una petición HTTP Get
    * @param request Objeto que contiene la solicitud al servlet
    * @param response Objeto que contiene la respuesta desde el servlet
    *
    * @exception ServletException Si una excepcion del servlet ocurre
    * @exception IOException Si un error de entrada/salida occurre
    **/
  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    doPost(request, response);
  }

  /**
    * Procesar una petición HTTP Post
    * @param request Objeto que contiene la solicitud al servlet
    * @param response Objeto que contiene la respuesta desde el servlet
    *
    * @exception ServletException Si una excepcion del servlet ocurre
    * @exception IOException Si un error de entrada/salida occurre
    **/
  public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    //Almacena el password anterior pasado en la solicitud
    String password = null;
    //Almacena el password nuevo pasado en la solicitud
    String nuevo = null;
    //Almacena el password nuevo pasado en la solicitud
    String nuevo_rep = null;

    password = request.getParameter("password");
    nuevo = request.getParameter("nuevo");
    nuevo_rep = request.getParameter("nuevo_rep");
    HttpSession session = request.getSession(false);
    //primeramente se comprueba que sean caracteres validos
    if (!Util.Valido(password) || !Util.Valido(nuevo) || !Util.Valido(nuevo_rep)) {
      request.setAttribute("error", "No se especificaron los datos o son datos invalidos");
      getServletContext().getRequestDispatcher("/sistema/src/sistema/PaginaError.jsp").forward(request,response);
      return;
    }
    if ((session == null)) {
      request.setAttribute("error", "Session Nula");
      getServletContext().getRequestDispatcher("/sistema/src/sistema/PaginaError.jsp").forward(request,response);
      return;
    }
    else if (!request.isRequestedSessionIdValid()) {
      request.setAttribute("error", "Id de session ya no valida");
      getServletContext().getRequestDispatcher("/sistema/src/sistema/PaginaError.jsp").forward(request,response);
      return;
    }
    Integer id = (Integer)session.getAttribute("id.usuario");
    if (id==null) {
      request.setAttribute("error", "Se tiene una sesion valida pero no un usuario valido");
      getServletContext().getRequestDispatcher("/sistema/src/sistema/PaginaError.jsp").forward(request,response);
      return;
    }
    Bd bd = Bd.getBd();
    Usuario usuario = bd.getUsuario_id(id.intValue());
    if(usuario==null ){
      request.setAttribute("error", "No existe el usuario de la session");
      getServletContext().getRequestDispatcher("/sistema/src/sistema/PaginaError.jsp").forward(request,response);
      return;
    }
    usuario.cambiar(password,nuevo,nuevo_rep,request.getRemoteAddr());
    if(!usuario.Errores()) {
      response.sendRedirect("/sistema/src/sistema/menu.jsp");
    }
    else {/*Cualquier error es eliminacion de la session*/
      request.setAttribute("error", usuario.getErrores());
      getServletContext().getRequestDispatcher("/sistema/src/sistema/PaginaError.jsp").forward(request,response);
    }
  }

  /**Limpiar recursos*/
  public void destroy() {
  }
}

/*
        if (!usuario.contraseña(password) ) {
        	//throw new SecurityException("La constraseña anterior introducida no es la correcta");
            request.setAttribute("error", "La constraseña anterior introducida no es la correcta");
            getServletContext().getRequestDispatcher("/sistema/src/sistema/PaginaError.jsp").forward(request,response);
        }

        usuario.setPassword(nuevo);
        usuario.setPassword2(nuevo_rep);
        if (!usuario.Errores()){
          try {
          usuario.password_digest();
          bd.setUpdate(usuario);
          bd.setLog(usuario.getId_i(),bd.MODI,"modificado:pass",request.getRemoteAddr());
          response.sendRedirect("/sistema/src/sistema/menu.jsp");
          }
          catch(Exception e) {
            //throw new SecurityException("No fue posible la actualizacion de la constraseña");
            request.setAttribute("error", "No fue posible la actualizacion de la constraseña");
            getServletContext().getRequestDispatcher("/sistema/src/sistema/PaginaError.jsp").forward(request,response);
          }
        }
*/
--%>